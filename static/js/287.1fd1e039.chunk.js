"use strict";(self.webpackChunkbookcode=self.webpackChunkbookcode||[]).push([[287],{287:function(n,o,e){e.r(o);var t=e(184);o.default=function(){return(0,t.jsx)("div",{className:"text-2xl",children:(0,t.jsxs)("ul",{children:[(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.1.2"}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:' \n\npackage org.zerock.mallapi.domain;\n\nimport java.time.LocalDate;\n\nimport jakarta.persistence.*;\nimport lombok.*;\n\n@Entity\n@Table(name = "tbl_todo")\n@Getter\n@ToString\n@Builder\n@AllArgsConstructor\n@NoArgsConstructor\npublic class Todo {\n  \n  @Id\n  @GeneratedValue(strategy = GenerationType.IDENTITY)\n  private Long tno;\n  \n  private String title;\n\n  private String writer;\n\n  private boolean complete;\n\n  private LocalDate dueDate;\n\n}\n\n\n---------------------------------------------------------------------------------------\n\npackage org.zerock.mallapi.repository;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.zerock.mallapi.domain.Todo;\n\npublic interface TodoRepository extends JpaRepository<Todo, Long>{\n  \n}\n\n\n\n          '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.2 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.repository;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\nimport lombok.extern.log4j.Log4j2;\n\n@SpringBootTest\n@Log4j2\npublic class TodoRepositoryTests {\n\n  @Autowired\n  private TodoRepository todoRepository;\n\n  @Test\n  public void test1() {\n\n    log.info("--------------------------");\n    log.info(todoRepository);\n\n  }\n}\n\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.2.1 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.repository;\n\nimport java.time.LocalDate;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.zerock.mallapi.domain.Todo;\n\nimport lombok.extern.log4j.Log4j2;\n\n@SpringBootTest\n@Log4j2\npublic class TodoRepositoryTests {\n\n  @Autowired\n  private TodoRepository todoRepository;\n\n  @Test\n  public void testInsert() {\n\n    for (int i = 1; i <= 100; i++) {\n\n      Todo todo = Todo.builder()\n      .title("Title..." + i)\n      .dueDate(LocalDate.of(2023,12,31))\n      .writer("user00")\n      .build();\n\n      todoRepository.save(todo);\n    }\n  }\n\n}\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.2.2 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:"\n\n  @Test\n  public void testRead() {\n\n    //\uc874\uc7ac\ud558\ub294 \ubc88\ud638\ub85c \ud655\uc778 \n    Long tno = 33L;\n\n    java.util.Optional<Todo> result = todoRepository.findById(tno);\n\n    Todo todo = result.orElseThrow();\n\n    log.info(todo);\n  }\n\n\n            "})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.2.3 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npublic class Todo {\n  \n  ...\uc0dd\ub7b5 \n\n  public void changeTitle(String title){\n    this.title = title;\n  }\n\n  public void changeComplete(boolean complete){\n    this.complete = complete;\n  }\n\n  public void changeDueDate(LocalDate dueDate){\n    this.dueDate = dueDate;\n  }\n\n}\n\n---------------------------------------------------------------------------------------\n\n\n  @Test\n  public void testModify() {\n\n    Long tno = 33L;\n\n    Optional<Todo> result = todoRepository.findById(tno); //java.util \ud328\ud0a4\uc9c0\uc758 Optional\n\n    Todo todo = result.orElseThrow();\n    todo.changeTitle("Modified 33...");\n    todo.changeComplete(true);\n    todo.changeDueDate(LocalDate.of(2023,10,10));\n\n    todoRepository.save(todo);\n\n  }\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.2.4 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:"\n\n@Test\npublic void testDelete() {\n  Long tno = 1L;\n\n  todoRepository.deleteById(tno);\n\n}\n\n\n            "})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.2.5 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.repository;\n\n...\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.data.domain.Sort;\nimport org.zerock.mallapi.domain.Todo;\n\nimport lombok.extern.log4j.Log4j2;\n\n@SpringBootTest\n@Log4j2\npublic class TodoRepositoryTests {\n\n  ...\n\n  @Test\n  public void testPaging() {\n\n    //import org.springframework.data.domain.Pageable;\n\n    Pageable pageable = PageRequest.of(0,10, Sort.by("tno").descending());\n\n    Page<Todo> result = todoRepository.findAll(pageable);\n\n    log.info(result.getTotalElements());\n\n    result.getContent().stream().forEach(todo -> log.info(todo));\n\n  }\n\n}\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.3 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.dto;\n\nimport com.fasterxml.jackson.annotation.JsonFormat;\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\n\nimport java.time.LocalDate;\n\n@Data\n@Builder\n@AllArgsConstructor\n@NoArgsConstructor\npublic class TodoDTO {\n\n  private Long tno;\n\n  private String title;\n\n  private String writer;\n\n  private boolean complete;\n\n  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")\n  private LocalDate dueDate;\n}\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.3.1 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.service;\n\nimport org.zerock.mallapi.dto.TodoDTO;\n\npublic interface TodoService {\n  \n  Long register(TodoDTO todoDTO);\n\n}\n\n\n-------------------------------------------------------------------------------------------\n\n\npackage org.zerock.mallapi.service;\n\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.zerock.mallapi.dto.TodoDTO;\n\nimport lombok.extern.log4j.Log4j2;\n\n@Service\n@Transactional\n@Log4j2\npublic class TodoServiceImpl implements TodoService {\n\n  @Override\n  public Long register(TodoDTO todoDTO) {\n    \n    log.info(".........");\n\n    return null;\n  }\n}\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.3.2 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:"\n\npackage org.zerock.mallapi.config;\n\nimport org.springframework.context.annotation.Configuration;\n\nimport org.modelmapper.ModelMapper;\nimport org.modelmapper.convention.MatchingStrategies;\nimport org.springframework.context.annotation.Bean;\n\n@Configuration\npublic class RootConfig {\n\n  @Bean\n  public ModelMapper getMapper() {\n    ModelMapper modelMapper = new ModelMapper();\n    modelMapper.getConfiguration()\n            .setFieldMatchingEnabled(true)\n            .setFieldAccessLevel(org.modelmapper.config.Configuration.AccessLevel.PRIVATE)\n            .setMatchingStrategy(MatchingStrategies.LOOSE);\n\n    return modelMapper;\n  }\n}\n\n\n            "})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.4.1"}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.service;\n\nimport org.modelmapper.ModelMapper;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.zerock.mallapi.domain.Todo;\nimport org.zerock.mallapi.dto.TodoDTO;\nimport org.zerock.mallapi.repository.TodoRepository;\n\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.log4j.Log4j2;\n\n@Service\n@Transactional\n@Log4j2\n@RequiredArgsConstructor  // \uc0dd\uc131\uc790 \uc790\ub3d9 \uc8fc\uc785\npublic class TodoServiceImpl implements TodoService {\n\n  //\uc790\ub3d9\uc8fc\uc785 \ub300\uc0c1\uc740 final\ub85c \n  private final ModelMapper modelMapper;\n\n  private final TodoRepository todoRepository;\n\n  @Override\n  public Long register(TodoDTO todoDTO) {\n    \n    log.info(".........");\n\n    Todo todo = modelMapper.map(todoDTO, Todo.class);\n\n    Todo savedTodo = todoRepository.save(todo);\n\n    return savedTodo.getTno();\n\n  }\n}\n\n------------------------------------------------------------------------\n\npackage org.zerock.mallapi.service;\n\nimport java.time.LocalDate;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\n\nimport org.zerock.mallapi.dto.TodoDTO;\n\nimport lombok.extern.log4j.Log4j2;\n\n@SpringBootTest\n@Log4j2\npublic class TodoServiceTests {\n  \n  @Autowired\n  private TodoService todoService;\n\n  @Test\n  public void testRegister() {\n\n    TodoDTO todoDTO = TodoDTO.builder()\n    .title("\uc11c\ube44\uc2a4 \ud14c\uc2a4\ud2b8")\n    .writer("tester")\n    .dueDate(LocalDate.of(2023,10,10))\n    .build();\n\n    Long tno = todoService.register(todoDTO);\n\n    log.info("TNO: " + tno);\n    \n  }\n\n}\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.4.2"}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:"\npublic interface TodoService {\n  \n  Long register(TodoDTO todoDTO);\n\n  TodoDTO get(Long tno);\n}\n\n------------------------------------------------------------------------\n\n  @Override\n  public TodoDTO get(Long tno) {\n    \n    Optional<Todo> result = todoRepository.findById(tno);\n\n    Todo todo = result.orElseThrow();\n\n    TodoDTO dto = modelMapper.map(todo, TodoDTO.class);\n\n    return dto;\n  }\n\n  ------------------------------------------------------------------------\n\n  @Test\n  public void testGet() {\n\n    Long tno = 101L;\n\n    TodoDTO todoDTO = todoService.get(tno);\n\n    log.info(todoDTO);\n\n  }\n\n            "})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"2.5 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:"\n\npublic interface TodoService {\n  \n  Long register(TodoDTO todoDTO);\n\n  TodoDTO get(Long tno);\n\n  void modify(TodoDTO todoDTO);\n\n  void remove(Long tno);\n}\n\n\n\n------------------------------------------------------------------------\n\n\n  @Override\n  public void modify(TodoDTO todoDTO) {\n\n    Optional<Todo> result = todoRepository.findById(todoDTO.getTno());\n\n    Todo todo = result.orElseThrow();\n\n    todo.changeTitle(todoDTO.getTitle());\n    todo.changeDueDate(todoDTO.getDueDate());\n    todo.changeComplete(todoDTO.isComplete());\n \n    todoRepository.save(todo);\n\n  }\n\n  @Override\n  public void remove(Long tno) {\n    \n    todoRepository.deleteById(tno);\n\n  }\n\n\n            "})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.5 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.dto;\n\nimport lombok.AllArgsConstructor;\nimport lombok.Builder;\nimport lombok.Data;\nimport lombok.NoArgsConstructor;\nimport lombok.experimental.SuperBuilder;\n\n@Data\n@SuperBuilder\n@AllArgsConstructor\n@NoArgsConstructor\npublic class PageRequestDTO {\n\n  @Builder.Default\n  private int page = 1;\n\n  @Builder.Default\n  private int size = 10;\n}\n\n------------------------------------------------------------------------\n\npackage org.zerock.mallapi.dto;\n\nimport lombok.Builder;\nimport lombok.Data;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\nimport java.util.stream.IntStream;\n\n@Data\npublic class PageResponseDTO<E> {\n\n  private List<E> dtoList;\n\n  private List<Integer> pageNumList;\n\n  private PageRequestDTO pageRequestDTO;\n\n  private boolean prev, next;\n\n  private int totalCount, prevPage, nextPage, totalPage, current;\n\n  @Builder(builderMethodName = "withAll")\n  public PageResponseDTO(List<E> dtoList, PageRequestDTO pageRequestDTO, long totalCount) {\n\n    this.dtoList = dtoList;\n    this.pageRequestDTO = pageRequestDTO;\n    this.totalCount = (int)totalCount;\n\n    int end =   (int)(Math.ceil( pageRequestDTO.getPage() / 10.0 )) *  10;\n\n    int start = end - 9;\n\n    int last =  (int)(Math.ceil((totalCount/(double)pageRequestDTO.getSize())));\n\n    end =  end > last ? last: end;\n\n    this.prev = start > 1;\n\n\n    this.next =  totalCount > end * pageRequestDTO.getSize();\n\n    this.pageNumList = IntStream.rangeClosed(start,end).boxed().collect(Collectors.toList());\n\n    if(prev) {\n        this.prevPage = start -1;\n    }\n\n    if(next) {\n        this.nextPage = end + 1;\n    }\n\n    this.totalPage = this.pageNumList.size();\n\n    this.current = pageRequestDTO.getPage();\n\n  }\n}\n\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.5.1 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.service;\n\nimport org.zerock.mallapi.dto.PageRequestDTO;\nimport org.zerock.mallapi.dto.PageResponseDTO;\nimport org.zerock.mallapi.dto.TodoDTO;\n\npublic interface TodoService {\n  \n  \u2026\uc0dd\ub7b5 \n\n  PageResponseDTO<TodoDTO> list(PageRequestDTO pageRequestDTO);\n}\n\n\n--------------------------------------------------------------------\n\npackage org.zerock.mallapi.service;\n\nimport java.util.List;\nimport java.util.Optional;\nimport java.util.stream.Collectors;\n\nimport org.modelmapper.ModelMapper;\nimport org.springframework.data.domain.Page;\nimport org.springframework.data.domain.PageRequest;\nimport org.springframework.data.domain.Pageable;\nimport org.springframework.data.domain.Sort;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.zerock.mallapi.domain.Todo;\nimport org.zerock.mallapi.dto.PageRequestDTO;\nimport org.zerock.mallapi.dto.PageResponseDTO;\nimport org.zerock.mallapi.dto.TodoDTO;\nimport org.zerock.mallapi.repository.TodoRepository;\n\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.log4j.Log4j2;\n\n@Service\n@Transactional\n@Log4j2\n@RequiredArgsConstructor  // \uc0dd\uc131\uc790 \uc790\ub3d9 \uc8fc\uc785\npublic class TodoServiceImpl implements TodoService {\n\n  //\uc790\ub3d9\uc8fc\uc785 \ub300\uc0c1\uc740 final\ub85c \n  private final ModelMapper modelMapper;\n\n  private final TodoRepository todoRepository;\n\n\u2026\uc0dd\ub7b5 \n\n  @Override\n  public PageResponseDTO<TodoDTO> list(PageRequestDTO pageRequestDTO) {\n\n    Pageable pageable = \n      PageRequest.of( \n        pageRequestDTO.getPage() - 1 ,  // 1\ud398\uc774\uc9c0\uac00 0\uc774\ubbc0\ub85c \uc8fc\uc758 \n        pageRequestDTO.getSize(), \n        Sort.by("tno").descending());\n\n    Page<Todo> result = todoRepository.findAll(pageable);    \n\n    List<TodoDTO> dtoList = result.getContent().stream()\n      .map(todo -> modelMapper.map(todo, TodoDTO.class))\n      .collect(Collectors.toList());\n    \n    long totalCount = result.getTotalElements();\n\n    PageResponseDTO<TodoDTO> responseDTO = PageResponseDTO.<TodoDTO>withAll()\n      .dtoList(dtoList)\n      .pageRequestDTO(pageRequestDTO)\n      .totalCount(totalCount)\n      .build();\n\n    return responseDTO;\n  }\n\n}\n\n\n--------------------------------------------------------------------------------\n\n  @Test\n  public void testList() {\n\n    PageRequestDTO pageRequestDTO = PageRequestDTO.builder()\n    .page(2)\n    .size(10)\n    .build();\n\n    PageResponseDTO<TodoDTO> response = todoService.list(pageRequestDTO);\n\n    log.info(response);\n\n  }\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.5.2 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport org.zerock.mallapi.dto.PageRequestDTO;\nimport org.zerock.mallapi.dto.PageResponseDTO;\nimport org.zerock.mallapi.dto.TodoDTO;\nimport org.zerock.mallapi.service.TodoService;\n\nimport lombok.RequiredArgsConstructor;\nimport lombok.extern.log4j.Log4j2;\n\n\n@RestController\n@RequiredArgsConstructor\n@Log4j2\n@RequestMapping("/api/todo")\npublic class TodoController {\n  \n  private final TodoService service;\n\n  @GetMapping("/{tno}")\n  public TodoDTO get(@PathVariable(name ="tno") Long tno) {\n\n    return service.get(tno);\n  }\n\n  @GetMapping("/list")\n  public PageResponseDTO<TodoDTO> list(PageRequestDTO pageRequestDTO ) {\n\n    log.info(pageRequestDTO);\n\n    return service.list(pageRequestDTO);\n  }\n\n}\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.6 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\npackage org.zerock.mallapi.controller.advice;\n\nimport java.util.Map;\nimport java.util.NoSuchElementException;\n\nimport org.springframework.http.HttpStatus;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.MethodArgumentNotValidException;\nimport org.springframework.web.bind.annotation.ExceptionHandler;\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\n\n/**\n * CustomControllerAdvice\n */\n@RestControllerAdvice\npublic class CustomControllerAdvice {\n\n\n  @ExceptionHandler(NoSuchElementException.class)\n  protected ResponseEntity<?> notExist(NoSuchElementException e) {\n\n      String msg = e.getMessage();\n\n      return ResponseEntity.status(HttpStatus.NOT_FOUND).body(Map.of("msg", msg));\n  }\n\n  @ExceptionHandler(MethodArgumentNotValidException.class)\n  protected ResponseEntity<?> handleIllegalArgumentException(MethodArgumentNotValidException e) {\n\n      String msg = e.getMessage();\n\n      return ResponseEntity.status(HttpStatus.NOT_ACCEPTABLE).body(Map.of("msg", msg));\n  }\n}\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.7.1"}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\npackage org.zerock.mallapi.controller.formatter;\n\nimport java.time.LocalDate;\nimport java.time.format.DateTimeFormatter;\nimport java.util.Locale;\n\nimport org.springframework.format.Formatter;\n\n/**\n * LocalDateFormatter\n */\npublic class LocalDateFormatter implements Formatter<LocalDate>{\n\n  @Override\n  public LocalDate parse(String text, Locale locale) {\n      return LocalDate.parse(text, DateTimeFormatter.ofPattern("yyyy-MM-dd"));\n  }\n\n  @Override\n  public String print(LocalDate object, Locale locale) {\n      return DateTimeFormatter.ofPattern("yyyy-MM-dd").format(object);\n  }\n  \n}\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.7.2 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\n  @PostMapping("/")\n  public Map<String, Long> register(@RequestBody TodoDTO todoDTO){\n   \n    log.info("TodoDTO: " + todoDTO);\n\n    Long tno = service.register(todoDTO);\n    \n    return Map.of("TNO", tno);\n  }\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.7.3 "}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\n  @PutMapping("/{tno}")\n  public Map<String, String> modify( \n    @PathVariable(name="tno") Long tno, \n    @RequestBody TodoDTO todoDTO) {\n\n    todoDTO.setTno(tno);\n\n    log.info("Modify: " + todoDTO);\n\n    service.modify(todoDTO);\n\n    return Map.of("RESULT", "SUCCESS");\n  }\n\n\n            '})})]}),(0,t.jsxs)("li",{children:[(0,t.jsx)("div",{className:"p-3 font-extrabold bg-green-500 m-3",children:"3.7.4"}),(0,t.jsx)("div",{className:"border-2 m-2",children:(0,t.jsx)("pre",{children:'\n\n  @DeleteMapping("/{tno}")\n  public Map<String, String> remove( @PathVariable(name="tno") Long tno ){\n\n    log.info("Remove:  " + tno);\n\n    service.remove(tno);\n\n    return Map.of("RESULT", "SUCCESS");\n  }\n\n\n  ------------------------------------------------------------------------------------\n\n  package org.zerock.mallapi.config;\n\n  import org.springframework.context.annotation.Configuration;\n  import org.springframework.format.FormatterRegistry;\n  import org.springframework.web.servlet.config.annotation.CorsRegistry;\n  import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\n  import org.zerock.mallapi.controller.formatter.LocalDateFormatter;\n  \n  @Configuration\n  public class CustomServletConfig implements WebMvcConfigurer{\n  \n    @Override\n    public void addFormatters(FormatterRegistry registry) {\n      \n      registry.addFormatter(new LocalDateFormatter());\n    }\n  \n    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n  \n        registry.addMapping("/**")\n                .allowedOrigins("*")\n                .allowedMethods("HEAD", "GET", "POST", "PUT", "DELETE", "OPTIONS")\n                .maxAge(300)\n                .allowedHeaders("Authorization", "Cache-Control", "Content-Type");\n    }\n  \n  }\n  \n\n            '})})]})]})})}}}]);
//# sourceMappingURL=287.1fd1e039.chunk.js.map