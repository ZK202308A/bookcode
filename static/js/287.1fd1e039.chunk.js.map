{"version":3,"file":"static/js/287.1fd1e039.chunk.js","mappings":"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","sources":["pages/Ch03.js"],"sourcesContent":["\r\n\r\nconst Ch03 = () => {\r\n  return ( \r\n    <div className=\"text-2xl\">\r\n    <ul>\r\n      <li>\r\n        <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.1.2</div>\r\n        <div className=\"border-2 m-2\">\r\n          <pre>\r\n          {` \r\n\r\npackage org.zerock.mallapi.domain;\r\n\r\nimport java.time.LocalDate;\r\n\r\nimport jakarta.persistence.*;\r\nimport lombok.*;\r\n\r\n@Entity\r\n@Table(name = \"tbl_todo\")\r\n@Getter\r\n@ToString\r\n@Builder\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class Todo {\r\n  \r\n  @Id\r\n  @GeneratedValue(strategy = GenerationType.IDENTITY)\r\n  private Long tno;\r\n  \r\n  private String title;\r\n\r\n  private String writer;\r\n\r\n  private boolean complete;\r\n\r\n  private LocalDate dueDate;\r\n\r\n}\r\n\r\n\r\n---------------------------------------------------------------------------------------\r\n\r\npackage org.zerock.mallapi.repository;\r\n\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.zerock.mallapi.domain.Todo;\r\n\r\npublic interface TodoRepository extends JpaRepository<Todo, Long>{\r\n  \r\n}\r\n\r\n\r\n\r\n          `}\r\n          </pre>\r\n        </div>\r\n      </li>\r\n\r\n      <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.2 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.repository;\r\n\r\nimport org.junit.jupiter.api.Test;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\n\r\nimport lombok.extern.log4j.Log4j2;\r\n\r\n@SpringBootTest\r\n@Log4j2\r\npublic class TodoRepositoryTests {\r\n\r\n  @Autowired\r\n  private TodoRepository todoRepository;\r\n\r\n  @Test\r\n  public void test1() {\r\n\r\n    log.info(\"--------------------------\");\r\n    log.info(todoRepository);\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.2.1 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.repository;\r\n\r\nimport java.time.LocalDate;\r\n\r\nimport org.junit.jupiter.api.Test;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.zerock.mallapi.domain.Todo;\r\n\r\nimport lombok.extern.log4j.Log4j2;\r\n\r\n@SpringBootTest\r\n@Log4j2\r\npublic class TodoRepositoryTests {\r\n\r\n  @Autowired\r\n  private TodoRepository todoRepository;\r\n\r\n  @Test\r\n  public void testInsert() {\r\n\r\n    for (int i = 1; i <= 100; i++) {\r\n\r\n      Todo todo = Todo.builder()\r\n      .title(\"Title...\" + i)\r\n      .dueDate(LocalDate.of(2023,12,31))\r\n      .writer(\"user00\")\r\n      .build();\r\n\r\n      todoRepository.save(todo);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.2.2 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\n  @Test\r\n  public void testRead() {\r\n\r\n    //존재하는 번호로 확인 \r\n    Long tno = 33L;\r\n\r\n    java.util.Optional<Todo> result = todoRepository.findById(tno);\r\n\r\n    Todo todo = result.orElseThrow();\r\n\r\n    log.info(todo);\r\n  }\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.2.3 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npublic class Todo {\r\n  \r\n  ...생략 \r\n\r\n  public void changeTitle(String title){\r\n    this.title = title;\r\n  }\r\n\r\n  public void changeComplete(boolean complete){\r\n    this.complete = complete;\r\n  }\r\n\r\n  public void changeDueDate(LocalDate dueDate){\r\n    this.dueDate = dueDate;\r\n  }\r\n\r\n}\r\n\r\n---------------------------------------------------------------------------------------\r\n\r\n\r\n  @Test\r\n  public void testModify() {\r\n\r\n    Long tno = 33L;\r\n\r\n    Optional<Todo> result = todoRepository.findById(tno); //java.util 패키지의 Optional\r\n\r\n    Todo todo = result.orElseThrow();\r\n    todo.changeTitle(\"Modified 33...\");\r\n    todo.changeComplete(true);\r\n    todo.changeDueDate(LocalDate.of(2023,10,10));\r\n\r\n    todoRepository.save(todo);\r\n\r\n  }\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.2.4 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\n@Test\r\npublic void testDelete() {\r\n  Long tno = 1L;\r\n\r\n  todoRepository.deleteById(tno);\r\n\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.2.5 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.repository;\r\n\r\n...\r\n\r\nimport org.junit.jupiter.api.Test;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\nimport org.springframework.data.domain.Page;\r\nimport org.springframework.data.domain.PageRequest;\r\nimport org.springframework.data.domain.Pageable;\r\nimport org.springframework.data.domain.Sort;\r\nimport org.zerock.mallapi.domain.Todo;\r\n\r\nimport lombok.extern.log4j.Log4j2;\r\n\r\n@SpringBootTest\r\n@Log4j2\r\npublic class TodoRepositoryTests {\r\n\r\n  ...\r\n\r\n  @Test\r\n  public void testPaging() {\r\n\r\n    //import org.springframework.data.domain.Pageable;\r\n\r\n    Pageable pageable = PageRequest.of(0,10, Sort.by(\"tno\").descending());\r\n\r\n    Page<Todo> result = todoRepository.findAll(pageable);\r\n\r\n    log.info(result.getTotalElements());\r\n\r\n    result.getContent().stream().forEach(todo -> log.info(todo));\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.3 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.dto;\r\n\r\nimport com.fasterxml.jackson.annotation.JsonFormat;\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.time.LocalDate;\r\n\r\n@Data\r\n@Builder\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class TodoDTO {\r\n\r\n  private Long tno;\r\n\r\n  private String title;\r\n\r\n  private String writer;\r\n\r\n  private boolean complete;\r\n\r\n  @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = \"yyyy-MM-dd\")\r\n  private LocalDate dueDate;\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.3.1 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.service;\r\n\r\nimport org.zerock.mallapi.dto.TodoDTO;\r\n\r\npublic interface TodoService {\r\n  \r\n  Long register(TodoDTO todoDTO);\r\n\r\n}\r\n\r\n\r\n-------------------------------------------------------------------------------------------\r\n\r\n\r\npackage org.zerock.mallapi.service;\r\n\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport org.zerock.mallapi.dto.TodoDTO;\r\n\r\nimport lombok.extern.log4j.Log4j2;\r\n\r\n@Service\r\n@Transactional\r\n@Log4j2\r\npublic class TodoServiceImpl implements TodoService {\r\n\r\n  @Override\r\n  public Long register(TodoDTO todoDTO) {\r\n    \r\n    log.info(\".........\");\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.3.2 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.config;\r\n\r\nimport org.springframework.context.annotation.Configuration;\r\n\r\nimport org.modelmapper.ModelMapper;\r\nimport org.modelmapper.convention.MatchingStrategies;\r\nimport org.springframework.context.annotation.Bean;\r\n\r\n@Configuration\r\npublic class RootConfig {\r\n\r\n  @Bean\r\n  public ModelMapper getMapper() {\r\n    ModelMapper modelMapper = new ModelMapper();\r\n    modelMapper.getConfiguration()\r\n            .setFieldMatchingEnabled(true)\r\n            .setFieldAccessLevel(org.modelmapper.config.Configuration.AccessLevel.PRIVATE)\r\n            .setMatchingStrategy(MatchingStrategies.LOOSE);\r\n\r\n    return modelMapper;\r\n  }\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.4.1</div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.service;\r\n\r\nimport org.modelmapper.ModelMapper;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport org.zerock.mallapi.domain.Todo;\r\nimport org.zerock.mallapi.dto.TodoDTO;\r\nimport org.zerock.mallapi.repository.TodoRepository;\r\n\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.log4j.Log4j2;\r\n\r\n@Service\r\n@Transactional\r\n@Log4j2\r\n@RequiredArgsConstructor  // 생성자 자동 주입\r\npublic class TodoServiceImpl implements TodoService {\r\n\r\n  //자동주입 대상은 final로 \r\n  private final ModelMapper modelMapper;\r\n\r\n  private final TodoRepository todoRepository;\r\n\r\n  @Override\r\n  public Long register(TodoDTO todoDTO) {\r\n    \r\n    log.info(\".........\");\r\n\r\n    Todo todo = modelMapper.map(todoDTO, Todo.class);\r\n\r\n    Todo savedTodo = todoRepository.save(todo);\r\n\r\n    return savedTodo.getTno();\r\n\r\n  }\r\n}\r\n\r\n------------------------------------------------------------------------\r\n\r\npackage org.zerock.mallapi.service;\r\n\r\nimport java.time.LocalDate;\r\n\r\nimport org.junit.jupiter.api.Test;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.test.context.SpringBootTest;\r\n\r\nimport org.zerock.mallapi.dto.TodoDTO;\r\n\r\nimport lombok.extern.log4j.Log4j2;\r\n\r\n@SpringBootTest\r\n@Log4j2\r\npublic class TodoServiceTests {\r\n  \r\n  @Autowired\r\n  private TodoService todoService;\r\n\r\n  @Test\r\n  public void testRegister() {\r\n\r\n    TodoDTO todoDTO = TodoDTO.builder()\r\n    .title(\"서비스 테스트\")\r\n    .writer(\"tester\")\r\n    .dueDate(LocalDate.of(2023,10,10))\r\n    .build();\r\n\r\n    Long tno = todoService.register(todoDTO);\r\n\r\n    log.info(\"TNO: \" + tno);\r\n    \r\n  }\r\n\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.4.2</div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\npublic interface TodoService {\r\n  \r\n  Long register(TodoDTO todoDTO);\r\n\r\n  TodoDTO get(Long tno);\r\n}\r\n\r\n------------------------------------------------------------------------\r\n\r\n  @Override\r\n  public TodoDTO get(Long tno) {\r\n    \r\n    Optional<Todo> result = todoRepository.findById(tno);\r\n\r\n    Todo todo = result.orElseThrow();\r\n\r\n    TodoDTO dto = modelMapper.map(todo, TodoDTO.class);\r\n\r\n    return dto;\r\n  }\r\n\r\n  ------------------------------------------------------------------------\r\n\r\n  @Test\r\n  public void testGet() {\r\n\r\n    Long tno = 101L;\r\n\r\n    TodoDTO todoDTO = todoService.get(tno);\r\n\r\n    log.info(todoDTO);\r\n\r\n  }\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >2.5 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npublic interface TodoService {\r\n  \r\n  Long register(TodoDTO todoDTO);\r\n\r\n  TodoDTO get(Long tno);\r\n\r\n  void modify(TodoDTO todoDTO);\r\n\r\n  void remove(Long tno);\r\n}\r\n\r\n\r\n\r\n------------------------------------------------------------------------\r\n\r\n\r\n  @Override\r\n  public void modify(TodoDTO todoDTO) {\r\n\r\n    Optional<Todo> result = todoRepository.findById(todoDTO.getTno());\r\n\r\n    Todo todo = result.orElseThrow();\r\n\r\n    todo.changeTitle(todoDTO.getTitle());\r\n    todo.changeDueDate(todoDTO.getDueDate());\r\n    todo.changeComplete(todoDTO.isComplete());\r\n \r\n    todoRepository.save(todo);\r\n\r\n  }\r\n\r\n  @Override\r\n  public void remove(Long tno) {\r\n    \r\n    todoRepository.deleteById(tno);\r\n\r\n  }\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.5 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.dto;\r\n\r\nimport lombok.AllArgsConstructor;\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.experimental.SuperBuilder;\r\n\r\n@Data\r\n@SuperBuilder\r\n@AllArgsConstructor\r\n@NoArgsConstructor\r\npublic class PageRequestDTO {\r\n\r\n  @Builder.Default\r\n  private int page = 1;\r\n\r\n  @Builder.Default\r\n  private int size = 10;\r\n}\r\n\r\n------------------------------------------------------------------------\r\n\r\npackage org.zerock.mallapi.dto;\r\n\r\nimport lombok.Builder;\r\nimport lombok.Data;\r\n\r\nimport java.util.List;\r\nimport java.util.stream.Collectors;\r\nimport java.util.stream.IntStream;\r\n\r\n@Data\r\npublic class PageResponseDTO<E> {\r\n\r\n  private List<E> dtoList;\r\n\r\n  private List<Integer> pageNumList;\r\n\r\n  private PageRequestDTO pageRequestDTO;\r\n\r\n  private boolean prev, next;\r\n\r\n  private int totalCount, prevPage, nextPage, totalPage, current;\r\n\r\n  @Builder(builderMethodName = \"withAll\")\r\n  public PageResponseDTO(List<E> dtoList, PageRequestDTO pageRequestDTO, long totalCount) {\r\n\r\n    this.dtoList = dtoList;\r\n    this.pageRequestDTO = pageRequestDTO;\r\n    this.totalCount = (int)totalCount;\r\n\r\n    int end =   (int)(Math.ceil( pageRequestDTO.getPage() / 10.0 )) *  10;\r\n\r\n    int start = end - 9;\r\n\r\n    int last =  (int)(Math.ceil((totalCount/(double)pageRequestDTO.getSize())));\r\n\r\n    end =  end > last ? last: end;\r\n\r\n    this.prev = start > 1;\r\n\r\n\r\n    this.next =  totalCount > end * pageRequestDTO.getSize();\r\n\r\n    this.pageNumList = IntStream.rangeClosed(start,end).boxed().collect(Collectors.toList());\r\n\r\n    if(prev) {\r\n        this.prevPage = start -1;\r\n    }\r\n\r\n    if(next) {\r\n        this.nextPage = end + 1;\r\n    }\r\n\r\n    this.totalPage = this.pageNumList.size();\r\n\r\n    this.current = pageRequestDTO.getPage();\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.5.1 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.service;\r\n\r\nimport org.zerock.mallapi.dto.PageRequestDTO;\r\nimport org.zerock.mallapi.dto.PageResponseDTO;\r\nimport org.zerock.mallapi.dto.TodoDTO;\r\n\r\npublic interface TodoService {\r\n  \r\n  …생략 \r\n\r\n  PageResponseDTO<TodoDTO> list(PageRequestDTO pageRequestDTO);\r\n}\r\n\r\n\r\n--------------------------------------------------------------------\r\n\r\npackage org.zerock.mallapi.service;\r\n\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport java.util.stream.Collectors;\r\n\r\nimport org.modelmapper.ModelMapper;\r\nimport org.springframework.data.domain.Page;\r\nimport org.springframework.data.domain.PageRequest;\r\nimport org.springframework.data.domain.Pageable;\r\nimport org.springframework.data.domain.Sort;\r\nimport org.springframework.stereotype.Service;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport org.zerock.mallapi.domain.Todo;\r\nimport org.zerock.mallapi.dto.PageRequestDTO;\r\nimport org.zerock.mallapi.dto.PageResponseDTO;\r\nimport org.zerock.mallapi.dto.TodoDTO;\r\nimport org.zerock.mallapi.repository.TodoRepository;\r\n\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.log4j.Log4j2;\r\n\r\n@Service\r\n@Transactional\r\n@Log4j2\r\n@RequiredArgsConstructor  // 생성자 자동 주입\r\npublic class TodoServiceImpl implements TodoService {\r\n\r\n  //자동주입 대상은 final로 \r\n  private final ModelMapper modelMapper;\r\n\r\n  private final TodoRepository todoRepository;\r\n\r\n…생략 \r\n\r\n  @Override\r\n  public PageResponseDTO<TodoDTO> list(PageRequestDTO pageRequestDTO) {\r\n\r\n    Pageable pageable = \r\n      PageRequest.of( \r\n        pageRequestDTO.getPage() - 1 ,  // 1페이지가 0이므로 주의 \r\n        pageRequestDTO.getSize(), \r\n        Sort.by(\"tno\").descending());\r\n\r\n    Page<Todo> result = todoRepository.findAll(pageable);    \r\n\r\n    List<TodoDTO> dtoList = result.getContent().stream()\r\n      .map(todo -> modelMapper.map(todo, TodoDTO.class))\r\n      .collect(Collectors.toList());\r\n    \r\n    long totalCount = result.getTotalElements();\r\n\r\n    PageResponseDTO<TodoDTO> responseDTO = PageResponseDTO.<TodoDTO>withAll()\r\n      .dtoList(dtoList)\r\n      .pageRequestDTO(pageRequestDTO)\r\n      .totalCount(totalCount)\r\n      .build();\r\n\r\n    return responseDTO;\r\n  }\r\n\r\n}\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\n  @Test\r\n  public void testList() {\r\n\r\n    PageRequestDTO pageRequestDTO = PageRequestDTO.builder()\r\n    .page(2)\r\n    .size(10)\r\n    .build();\r\n\r\n    PageResponseDTO<TodoDTO> response = todoService.list(pageRequestDTO);\r\n\r\n    log.info(response);\r\n\r\n  }\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.5.2 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.controller;\r\n\r\nimport org.springframework.web.bind.annotation.GetMapping;\r\nimport org.springframework.web.bind.annotation.PathVariable;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\nimport org.zerock.mallapi.dto.PageRequestDTO;\r\nimport org.zerock.mallapi.dto.PageResponseDTO;\r\nimport org.zerock.mallapi.dto.TodoDTO;\r\nimport org.zerock.mallapi.service.TodoService;\r\n\r\nimport lombok.RequiredArgsConstructor;\r\nimport lombok.extern.log4j.Log4j2;\r\n\r\n\r\n@RestController\r\n@RequiredArgsConstructor\r\n@Log4j2\r\n@RequestMapping(\"/api/todo\")\r\npublic class TodoController {\r\n  \r\n  private final TodoService service;\r\n\r\n  @GetMapping(\"/{tno}\")\r\n  public TodoDTO get(@PathVariable(name =\"tno\") Long tno) {\r\n\r\n    return service.get(tno);\r\n  }\r\n\r\n  @GetMapping(\"/list\")\r\n  public PageResponseDTO<TodoDTO> list(PageRequestDTO pageRequestDTO ) {\r\n\r\n    log.info(pageRequestDTO);\r\n\r\n    return service.list(pageRequestDTO);\r\n  }\r\n\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.6 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\npackage org.zerock.mallapi.controller.advice;\r\n\r\nimport java.util.Map;\r\nimport java.util.NoSuchElementException;\r\n\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.MethodArgumentNotValidException;\r\nimport org.springframework.web.bind.annotation.ExceptionHandler;\r\nimport org.springframework.web.bind.annotation.RestControllerAdvice;\r\n\r\n/**\r\n * CustomControllerAdvice\r\n */\r\n@RestControllerAdvice\r\npublic class CustomControllerAdvice {\r\n\r\n\r\n  @ExceptionHandler(NoSuchElementException.class)\r\n  protected ResponseEntity<?> notExist(NoSuchElementException e) {\r\n\r\n      String msg = e.getMessage();\r\n\r\n      return ResponseEntity.status(HttpStatus.NOT_FOUND).body(Map.of(\"msg\", msg));\r\n  }\r\n\r\n  @ExceptionHandler(MethodArgumentNotValidException.class)\r\n  protected ResponseEntity<?> handleIllegalArgumentException(MethodArgumentNotValidException e) {\r\n\r\n      String msg = e.getMessage();\r\n\r\n      return ResponseEntity.status(HttpStatus.NOT_ACCEPTABLE).body(Map.of(\"msg\", msg));\r\n  }\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.7.1</div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\npackage org.zerock.mallapi.controller.formatter;\r\n\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.Locale;\r\n\r\nimport org.springframework.format.Formatter;\r\n\r\n/**\r\n * LocalDateFormatter\r\n */\r\npublic class LocalDateFormatter implements Formatter<LocalDate>{\r\n\r\n  @Override\r\n  public LocalDate parse(String text, Locale locale) {\r\n      return LocalDate.parse(text, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));\r\n  }\r\n\r\n  @Override\r\n  public String print(LocalDate object, Locale locale) {\r\n      return DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").format(object);\r\n  }\r\n  \r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.7.2 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\n  @PostMapping(\"/\")\r\n  public Map<String, Long> register(@RequestBody TodoDTO todoDTO){\r\n   \r\n    log.info(\"TodoDTO: \" + todoDTO);\r\n\r\n    Long tno = service.register(todoDTO);\r\n    \r\n    return Map.of(\"TNO\", tno);\r\n  }\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.7.3 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\n  @PutMapping(\"/{tno}\")\r\n  public Map<String, String> modify( \r\n    @PathVariable(name=\"tno\") Long tno, \r\n    @RequestBody TodoDTO todoDTO) {\r\n\r\n    todoDTO.setTno(tno);\r\n\r\n    log.info(\"Modify: \" + todoDTO);\r\n\r\n    service.modify(todoDTO);\r\n\r\n    return Map.of(\"RESULT\", \"SUCCESS\");\r\n  }\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >3.7.4</div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\n  @DeleteMapping(\"/{tno}\")\r\n  public Map<String, String> remove( @PathVariable(name=\"tno\") Long tno ){\r\n\r\n    log.info(\"Remove:  \" + tno);\r\n\r\n    service.remove(tno);\r\n\r\n    return Map.of(\"RESULT\", \"SUCCESS\");\r\n  }\r\n\r\n\r\n  ------------------------------------------------------------------------------------\r\n\r\n  package org.zerock.mallapi.config;\r\n\r\n  import org.springframework.context.annotation.Configuration;\r\n  import org.springframework.format.FormatterRegistry;\r\n  import org.springframework.web.servlet.config.annotation.CorsRegistry;\r\n  import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\r\n  import org.zerock.mallapi.controller.formatter.LocalDateFormatter;\r\n  \r\n  @Configuration\r\n  public class CustomServletConfig implements WebMvcConfigurer{\r\n  \r\n    @Override\r\n    public void addFormatters(FormatterRegistry registry) {\r\n      \r\n      registry.addFormatter(new LocalDateFormatter());\r\n    }\r\n  \r\n    @Override\r\n    public void addCorsMappings(CorsRegistry registry) {\r\n  \r\n        registry.addMapping(\"/**\")\r\n                .allowedOrigins(\"*\")\r\n                .allowedMethods(\"HEAD\", \"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\")\r\n                .maxAge(300)\r\n                .allowedHeaders(\"Authorization\", \"Cache-Control\", \"Content-Type\");\r\n    }\r\n  \r\n  }\r\n  \r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n\r\n\r\n    </ul>\r\n    </div>      \r\n   );\r\n}\r\n \r\nexport default Ch03;\r\n"],"names":["_jsx","className","children","_jsxs"],"sourceRoot":""}