{"version":3,"file":"static/js/197.ef5af3f7.chunk.js","mappings":"4HA27CA,UAz7Ca,WACX,OACEA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,SACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,ueAiCJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,YACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,w/EA2HJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,YACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,ylEAqGJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,aACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,oxFA4HJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,4CACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,u+DAyGJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,4CACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,q4DA2FJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,yDACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,i0DAoFJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,YACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,snCAwDJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,6DACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,u0FAwHJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,YACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,qjCAoEJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,kDACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,g2EAoGJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,YACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,01BA2CJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,YACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,gSAwBJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,WACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,0zCAuEJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,UACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,y6GA2HJC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sCAAqCC,SAAE,YACtDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BF,EAAAA,EAAAA,KAAA,OAAAE,SAAA,6jGAiJZ,C","sources":["pages/Ch04.js"],"sourcesContent":["\r\n\r\nconst Ch04 = () => {\r\n  return ( \r\n    <div className=\"text-2xl\">\r\n      <ul>\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.2</div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport axios from \"axios\"\r\n\r\nexport const API_SERVER_HOST = 'http://localhost:8080'\r\n\r\nconst prefix = \\`\\${API_SERVER_HOST}/api/todo\\`\r\n\r\nexport const getOne = async (tno) => {\r\n\r\n  const res = await axios.get(\\`\\${prefix}/\\${tno}\\` )\r\n\r\n  return res.data\r\n\r\n}\r\n\r\nexport const getList = async ( pageParam ) => {\r\n\r\n  const {page,size} = pageParam\r\n\r\n  const res = await axios.get(\\`\\${prefix}/list\\`, {params: {page:page,size:size }})\r\n  \r\n  return res.data\r\n\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.3.1 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { getOne } from \"../../api/todoApi\"\r\n\r\nconst initState = {\r\n  tno:0,\r\n  title:'',\r\n  writer: '',\r\n  dueDate: null,\r\n  complete: false\r\n}\r\n\r\nconst ReadComponent = ({tno}) => {\r\n\r\n  const [todo, setTodo] = useState(initState) //아직 todo는 사용하지 않음 \r\n\r\n  useEffect(() => {\r\n    getOne(tno).then(data => {\r\n      console.log(data)\r\n      setTodo(data)\r\n    })    \r\n  }, [tno])\r\n\r\n  return (  \r\n    <div>\r\n\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default ReadComponent\r\n\r\n--------------------------------------------------------\r\n\r\n\r\nimport { useCallback } from \"react\";\r\nimport { createSearchParams, useNavigate, useParams, useSearchParams } from \"react-router-dom\";\r\nimport ReadComponent from \"../../components/todo/ReadComponent\";\r\n\r\nconst ReadPage = () => {\r\n\r\n  …생략\r\n\r\n  const moveToList = useCallback(() => {\r\n\r\n    navigate({pathname:\\`/todo/list\\`, search: queryStr})\r\n  },[page, size])\r\n\r\n  return ( \r\n    <div className=\"font-extrabold w-full bg-white mt-6\">\r\n\r\n      <div className=\"text-2xl \">\r\n        Todo Read Page Component {tno}\r\n      </div>\r\n      \r\n      <ReadComponent tno={tno}></ReadComponent>\r\n      \r\n    </div> \r\n  );\r\n\r\n}\r\n \r\nexport default ReadPage;\r\n\r\n\r\n--------------------------------------------------------\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport  {getOne} from \"../../api/todoApi\"\r\n\r\nconst initState = {\r\n  tno:0,\r\n  title:'',\r\n  writer: '',\r\n  dueDate: null,\r\n  complete: false\r\n}\r\n\r\nconst ReadComponent = ({tno}) => {\r\n\r\n  const [todo, setTodo] = useState(initState) //아직 todo는 사용하지 않음 \r\n\r\n  useEffect(() => {\r\n    getOne(tno).then(data => {\r\n      console.log(data)\r\n      setTodo(data)\r\n    })    \r\n  }, [tno])\r\n\r\n  return (  \r\n  <div className = \"border-2 border-sky-200 mt-10 m-2 p-4 \">\r\n      \r\n    {makeDiv('Tno', todo.tno)}\r\n    {makeDiv('Writer', todo.writer)}\r\n    {makeDiv('Title', todo.title)}\r\n    {makeDiv('Due Date', todo.dueDate)}\r\n    {makeDiv(Complete, todo.complete ? 'Completed' : 'Not Yet')}\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nconst makeDiv = (title,value) =>       \r\n<div className=\"flex justify-center\">\r\n  <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n    <div className=\"w-1/5 p-6 text-right font-bold\">{title}</div>\r\n    <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md\">\r\n    {value}        \r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n \r\nexport default ReadComponent\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.4.1 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\nconst getNum  = (param, defaultValue) => {\r\n\r\n  if(!param){\r\n    return defaultValue\r\n  }\r\n\r\n  return parseInt(param)\r\n}\r\n\r\n\r\nconst useCustomMove = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [queryParams] = useSearchParams()\r\n\r\n  const page = getNum(queryParams.get('page'), 1)\r\nconst size = getNum(queryParams.get('size'),10)\r\n\r\n  const queryDefault = createSearchParams({page, size}).toString() //새로 추가\r\n\r\n  const moveToList = (pageParam) => {\r\n\r\n    let queryStr = \"\"\r\n\r\n    if(pageParam){\r\n\r\n      const pageNum = getNum(pageParam.page, 1)\r\n      const sizeNum = getNum(pageParam.size, 10)\r\n\r\n      queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\r\n    }else {\r\n      queryStr = queryDefault\r\n    }\r\n\r\n  }\r\n\r\n  return  {moveToList, moveToModify, page, size}\r\n\r\n}\r\n\r\nexport default useCustomMove\r\n\r\n\r\n-----------------------------------------------------------------------------------------\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport  {getOne} from \"../../api/todoApi\"\r\nimport useCustomMove from \"../../hooks/useCustomMove\" //추가\r\n\r\n…생략\r\n\r\nconst ReadComponent = ({tno}) => {\r\n\r\n  const [todo, setTodo] = useState(initState) //아직 todo는 사용하지 않음 \r\n\r\n  const {moveToList} = useCustomMove()\r\n\r\n  useEffect(() => {\r\n    …생략     \r\n  }, [tno])\r\n\r\n  return (  \r\n  <div className = \"border-2 border-sky-200 mt-10 m-2 p-4 \">\r\n      \r\n    {makeDiv('Tno', todo.tno)}\r\n    {makeDiv('Writer', todo.writer)}\r\n    {makeDiv('Title', todo.title)}\r\n    {makeDiv('Title', todo.complete ? 'Completed' : 'Not Yet')}\r\n\r\n    {/* buttons.........start */}\r\n    <div className=\"flex justify-end p-4\">\r\n\r\n      <button type=\"button\" \r\n        className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n        onClick={() => moveToList()}\r\n      >\r\n        List\r\n      </button>  \r\n    </div>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\n…생략\r\n\r\n \r\nexport default ReadComponent\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.4.2  </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\nconst getNum  = (param, defaultValue) => {…생략 } \r\n\r\nconst useCustomMove = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [queryParams] = useSearchParams()\r\n\r\n  const page = getNum(queryParams.get('page'), 1)\r\n  const size = getNum(queryParams.get('size'),10)\r\n\r\n  const queryDefault = createSearchParams({page, size}).toString() //새로 추가\r\n\r\n  const moveToList = (pageParam) => {…생략  }\r\n\r\n  const moveToModify = (num) => {\r\n\r\n    console.log(queryDefault)\r\n\r\n    navigate({\r\n      pathname: \\`../modify/\\${num}\\`,\r\n      search: queryDefault  //수정시에 기존의 쿼리 스트링 유지를 위해 \r\n    })\r\n  }\r\n\r\n  return  {moveToList, moveToModify, page, size} //moveToModify 추가 \r\n\r\n}\r\n\r\nexport default useCustomMove\r\n\r\n\r\n-------------------------------------------------------------------------\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport  {getOne} from \"../../api/todoApi\"\r\nimport useCustomMove from \"../../hooks/useCustomMove\"\r\n\r\nconst initState = {\r\n  …생략 \r\n}\r\n\r\nconst ReadComponent = ({tno}) => {\r\n\r\n  const [todo, setTodo] = useState(initState) //아직 todo는 사용하지 않음 \r\n\r\n  //이동과 관련 기능은 모두 useCustomMove()로 \r\n  const {moveToList, moveToModify} = useCustomMove()\r\n\r\n  useEffect(() => {\r\n    …생략     \r\n  }, [tno])\r\n\r\n  return (  \r\n  <div className = \"border-2 border-sky-200 mt-10 m-2 p-4 \">\r\n      \r\n    …생략 \r\n\r\n    {/* buttons.........start */}\r\n    <div className=\"flex justify-end p-4\">\r\n\r\n      <button type=\"button\" \r\n        className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n        onClick={() => moveToList()}\r\n      >\r\n        List\r\n      </button>  \r\n\r\n      <button type=\"button\" \r\n        className=\"rounded p-4 m-2 text-xl w-32 text-white bg-red-500\"\r\n        onClick={() => moveToModify(tno)}\r\n      >\r\n        Modify\r\n      </button>\r\n\r\n    </div>\r\n\r\n  </div>\r\n  )\r\n}\r\n\r\nconst makeDiv = ..생략 \r\n\r\n \r\nexport default ReadComponent\r\n\r\n\r\n------------------------------------------------------------------------------------------------------\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport ReadComponent from \"../../components/todo/ReadComponent\";\r\n\r\nconst ReadPage = () => {\r\n\r\n  const {tno} = useParams()\r\n\r\n  return ( \r\n    <div className=\"font-extrabold w-full bg-white mt-6\">\r\n\r\n      <div className=\"text-2xl \">\r\n        Todo Read Page Component {tno}\r\n      </div>\r\n      \r\n      <ReadComponent tno={tno}></ReadComponent>\r\n      \r\n    </div> \r\n  );\r\n\r\n}\r\n \r\nexport default ReadPage;\r\n\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.4.1 목록 데이터 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { getList } from \"../../api/todoApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\n\r\nconst initState = {\r\n  dtoList:[],\r\n  pageNumList:[],\r\n  pageRequestDTO: null,\r\n  prev: false,\r\n  next: false,\r\n  totoalCount: 0,\r\n  prevPage: 0,\r\n  nextPage: 0,\r\n  totalPage: 0,\r\n  current: 0\r\n}\r\n\r\nconst ListComponent = () => {\r\n\r\n  const {page, size} = useCustomMove()\r\n\r\n  //serverData는 나중에 사용\r\n  const [serverData, setServerData] = useState(initState)\r\n\r\n  useEffect(() => {\r\n\r\n    getList({page,size}).then(data => {\r\n      console.log(data)\r\n      setServerData(data)\r\n    })\r\n\r\n  }, [page,size])\r\n\r\n  return ( \r\n    <div>\r\n       Todo List Component  \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default ListComponent;\r\n\r\n------------------------------------------------------------------\r\n\r\nimport ListComponent from \"../../components/todo/ListComponent\";\r\n\r\nconst ListPage = () => {\r\n\r\n  return ( \r\n  <div className=\"p-4 w-full bg-white\">\r\n    <div className=\"text-3xl font-extrabold\">\r\n      Todo List Page Component \r\n    </div> \r\n\r\n    <ListComponent/>\r\n\r\n  </div>\r\n   );\r\n}\r\n \r\nexport default ListPage;\r\n\r\n\r\n------------------------------------------------------------------\r\n\r\nreturn ( \r\n  <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n\r\n    <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n\r\n      {serverData.dtoList.map(todo =>\r\n\r\n      <div\r\n      key= {todo.tno} \r\n      className=\"w-full min-w-[400px]  p-2 m-2 rounded shadow-md\"\r\n      >  \r\n\r\n        <div className=\"flex \">\r\n          <div className=\"font-extrabold text-2xl p-2 w-1/12\">\r\n            {todo.tno}\r\n          </div>\r\n          <div className=\"text-1xl m-1 p-2 w-8/12 font-extrabold\">\r\n            {todo.title}\r\n          </div>\r\n          <div className=\"text-1xl m-1 p-2 w-2/10 font-medium\">\r\n            {todo.dueDate}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </div>\r\n\r\n  </div>\r\n\r\n  );\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.4.2 페이징처리  </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nconst PageComponent = ({serverData, movePage}) => {\r\n\r\n  return (  \r\n    <div className=\"m-6 flex justify-center\">\r\n\r\n    {serverData.prev ? \r\n      <div \r\n      className=\"m-2 p-2 w-16 text-center  font-bold text-blue-400 \"\r\n      onClick={() => movePage({page:serverData.prevPage} )}>\r\n      Prev </div> : <></>}  \r\n\r\n      {serverData.pageNumList.map(pageNum => \r\n      <div \r\n      key={pageNum}\r\n      className={ \\`m-2 p-2 w-12  text-center rounded shadow-md text-white \\${serverData.current === pageNum? 'bg-gray-500':'bg-blue-400'}\\`}\r\n      onClick={() => movePage( {page:pageNum})}>\r\n      {pageNum}\r\n      </div>\r\n\r\n      )}\r\n\r\n      {serverData.next ? \r\n      <div \r\n      className=\"m-2 p-2 w-16 text-center font-bold text-blue-400\"\r\n      onClick={() => movePage( {page:serverData.nextPage})}> \r\n      Next \r\n      </div> : <></>}  \r\n\r\n    </div>   \r\n\r\n  );\r\n}\r\n \r\nexport default PageComponent;\r\n\r\n----------------------------------------------------\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { getList } from \"../../api/todoApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport PageComponent from \"../common/PageComponent\";\r\n\r\nconst initState = {\r\n  …\r\n}\r\n\r\nconst ListComponent = () => {\r\n\r\n  const {page, size, moveToList} = useCustomMove() //moveToList가 추가적으로 필요 \r\n\r\n  //serverData는 나중에 사용\r\n  const [serverData, setServerData] = useState(initState)\r\n\r\n  useEffect(() => {\r\n\r\n…\r\n\r\n  }, [page,size])\r\n\r\n  return ( \r\n  <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n\r\n    <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n\r\n      {serverData.dtoList.map(todo =>\r\n\r\n      …\r\n\r\n      )}\r\n    </div>\r\n\r\n    <PageComponent serverData={serverData} movePage={moveToList}></PageComponent>\r\n\r\n  </div>\r\n\r\n  );\r\n}\r\n \r\nexport default ListComponent;\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.4.3 동일 페이지 클릭 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\nconst getNum  = (param, defaultValue) => { … 생략 … }\r\n\r\nconst useCustomMove = () => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const [refresh, setRefresh] = useState(false) //추가 \r\n\r\n  const [queryParams] = useSearchParams()\r\n\r\n  const page = getNum(queryParams.get('page'), 1)\r\n  const size = getNum(queryParams.get('size'),10)\r\n\r\n  const queryDefault = createSearchParams({page, size}).toString()\r\n\r\n  const moveToList = (pageParam) => {\r\n\r\n    let queryStr = \"\"\r\n\r\n    if(pageParam){\r\n\r\n      const pageNum = getNum(pageParam.page, 1)\r\n      const sizeNum = getNum(pageParam.size, 10)\r\n\r\n      queryStr = createSearchParams({page:pageNum, size: sizeNum}).toString()\r\n    }else {\r\n      queryStr = queryDefault\r\n    }\r\n\r\n    setRefresh(!refresh) //추가 \r\n\r\n  }\r\n\r\n  const moveToModify = (num) => {\r\n\r\n    console.log(queryDefault)\r\n\r\n    navigate({\r\n      pathname: \\`../modify/\\${num}\\`,\r\n      search: queryDefault  //수정시에 기존의 쿼리 스트링 유지를 위해 \r\n    })\r\n  }\r\n\r\n  return  {moveToList, moveToModify, page, size, refresh} //refresh 추가 \r\n\r\n}\r\n\r\nexport default useCustomMove\r\n\r\n------------------------------------------------------------------------------\r\n\r\n\r\nconst ListComponent = () => {\r\n\r\n  const {page, size, refresh, moveToList} = useCustomMove()//refresh 추가 \r\n\r\n  //serverData는 나중에 사용\r\n  const [serverData, setServerData] = useState(initState)\r\n\r\n  useEffect(() => {\r\n\r\n    getList({page,size}).then(data => {\r\n      console.log(data)\r\n      setServerData(data)\r\n    })\r\n\r\n  }, [page,size, refresh])\r\n\r\n  return ( \r\n  …\r\n\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.4.4 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { useState } from \"react\"\r\nimport { createSearchParams, useNavigate, useSearchParams } from \"react-router-dom\"\r\n\r\nconst useCustomMove = () => {\r\n\r\n  …생략\r\n\r\n  const moveToRead = (num) => {\r\n\r\n    console.log(queryDefault)\r\n\r\n    navigate({\r\n      pathname: \\`../read/\\${num}\\`,\r\n      search: queryDefault\r\n    })\r\n  }\r\n\r\n  return  {moveToList, moveToModify, moveToRead, page, size, refresh} //moveToRead 추가 \r\n}\r\n\r\nexport default useCustomMove\r\n\r\n------------------------------------------------------------------------\r\n\r\nconst ListComponent = () => {\r\n\r\n  const {page, size, refresh, moveToList, moveToRead} = useCustomMove() //moveToRead\r\n\r\n  …생략 \r\n\r\n  return ( \r\n  <div className=\"border-2 border-blue-100 mt-10 mr-2 ml-2\">\r\n\r\n    <div className=\"flex flex-wrap mx-auto justify-center p-6\">\r\n\r\n      {serverData.dtoList.map(todo =>\r\n\r\n      <div\r\n      key= {todo.tno} \r\n      className=\"w-full min-w-[400px]  p-2 m-2 rounded shadow-md\"\r\n      onClick={() => moveToRead(todo.tno)} //이벤트 처리 추가 \r\n      >  \r\n…생략 \r\n\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.5 등록 컴포넌트 모달 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nconst AddComponent = () => {\r\n  return (\r\n    <>Add Component</>\r\n  );\r\n}\r\n \r\nexport default AddComponent;\r\n\r\n-------------------------------------------------------------\r\n\r\nimport AddComponent from \"../../components/todo/AddComponent\";\r\n\r\nconst AddPage = () => {\r\n\r\n  return ( \r\n  <div className=\"p-4 w-full bg-white\">\r\n    <div className=\"text-3xl font-extrabold\">\r\n      Todo Add Page \r\n    </div> \r\n\r\n    <AddComponent/>\r\n\r\n  </div>\r\n  );\r\n\r\n}\r\n \r\nexport default AddPage;\r\n\r\n----------------------------------------------------\r\n\r\nimport { useState } from \"react\";\r\n\r\nconst initState = {\r\n  title:'',\r\n  writer: '',\r\n  dueDate: ''\r\n}\r\n\r\nconst AddComponent = () => {\r\n\r\n  const [todo, setTodo] = useState({...initState})\r\n\r\n  const handleChangeTodo = (e) => {\r\n\r\n    todo[e.target.name] = e.target.value\r\n\r\n    setTodo({...todo})\r\n  }\r\n\r\n  const handleClickAdd = () => {\r\n\r\n    console.log(todo)\r\n  }\r\n \r\n  return ( \r\n    <div className = \"border-2 border-sky-200 mt-10 m-2 p-4\"> \r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">TITLE</div>\r\n          <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-500 shadow-md\" \r\n           name=\"title\"\r\n           type={'text'} \r\n           value={todo.title}\r\n           onChange={handleChangeTodo}\r\n           >\r\n           </input>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">WRITER</div>\r\n          <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-500 shadow-md\" \r\n           name=\"writer\"\r\n           type={'text'} \r\n           value={todo.writer}\r\n           onChange={handleChangeTodo}\r\n           >\r\n           </input>\r\n        </div>  \r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">DUEDATE</div>\r\n          <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-500 shadow-md\" \r\n           name=\"dueDate\"\r\n           type={'date'} \r\n           value={todo.dueDate}\r\n           onChange={handleChangeTodo}\r\n           >\r\n           </input>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-end\">\r\n        <div className=\"relative mb-4 flex p-4 flex-wrap items-stretch\">\r\n          <button type=\"button\" \r\n          className=\"rounded p-4 w-36 bg-blue-500 text-xl  text-white \"\r\n          onClick={handleClickAdd}          \r\n          >\r\n          ADD\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default AddComponent;\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.5.1 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport axios from \"axios\"\r\n\r\nexport const API_SERVER_HOST = 'http://localhost:8080'\r\n\r\nconst prefix = \\`\\${API_SERVER_HOST}/api/todo\\`\r\n\r\n…생략 \r\n\r\nexport const postAdd = async (todoObj) => {\r\n\r\n  const res = await axios.post(\\`\\${prefix}/\\` , todoObj)\r\n\r\n  return res.data\r\n}\r\n\r\n\r\n----------------------------------------------------------\r\n\r\nimport { useState } from \"react\";\r\nimport { postAdd } from \"../../api/todoApi\";\r\n\r\nconst initState = {\r\n  title:'',\r\n  writer: '',\r\n  dueDate: ''\r\n}\r\n\r\nconst AddComponent = () => {\r\n\r\n  const [todo, setTodo] = useState({...initState})\r\n\r\n  const handleChangeTodo = (e) => {\r\n\r\n    todo[e.target.name] = e.target.value\r\n\r\n    setTodo({...todo})\r\n  }\r\n\r\n  const handleClickAdd = () => {\r\n\r\n    //console.log(todo)\r\n    postAdd(todo)\r\n    .then(result => {\r\n       console.log(result)\r\n       //초기화 \r\n       setTodo({...initState})\r\n    }).catch(e => {\r\n       console.error(e)\r\n    })\r\n\r\n  }\r\n \r\n  return ( \r\n    …생략 \r\n  );\r\n}\r\n \r\nexport default AddComponent;\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.5.2 모달 컴포넌트 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nconst ResultModal = ( {title,content, callbackFn} ) => {\r\n  return ( \r\n    <div \r\n    className={\\`fixed top-0 left-0 z-[1055] flex h-full w-full  justify-center bg-black bg-opacity-20\\`}  \r\n    onClick={() => {\r\n      if(callbackFn) {\r\n        callbackFn()\r\n      }\r\n    }}>\r\n      <div \r\n      className=\"absolute bg-white shadow dark:bg-gray-700 opacity-100 w-1/4 rounded  mt-10 mb-10 px-6 min-w-[600px]\">\r\n        <div className=\"justify-center bg-warning-400 mt-6 mb-6 text-2xl border-b-4 border-gray-500\">\r\n          {title}\r\n        </div>\r\n        <div className=\"text-4xl  border-orange-400 border-b-4 pt-4 pb-4\">\r\n          {content}\r\n        </div>\r\n        <div className=\"justify-end flex \">\r\n          <button \r\n          className=\"rounded bg-blue-500 mt-4 mb-4 px-6 pt-4 pb-4 text-lg text-white\" \r\n          onClick={() => {\r\n            if(callbackFn) {\r\n              callbackFn()\r\n            }\r\n          }}>Close Modal</button>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n   );\r\n}\r\n \r\nexport default ResultModal;\r\n\r\n------------------------------------------------------------------------------\r\n\r\nimport { useState } from \"react\";\r\nimport { postAdd } from \"../../api/todoApi\";\r\nimport ResultModal from \"../common/ResultModal\";\r\n\r\nconst initState = {\r\n  title:'',\r\n  writer: '',\r\n  dueDate: ''\r\n}\r\n\r\nconst AddComponent = () => {\r\n\r\nconst [todo, setTodo] = useState({...initState})\r\n\r\n//결과데이터가 있는 경우에는 ResultModal을 보여준다. \r\n\r\n  const [result, setResult] = useState(null) //결과 상태 \r\n\r\n  …생략 \r\n\r\n  const handleClickAdd = () => {\r\n    //console.log(todo)\r\n    postAdd(todo)\r\n    .then(result => {\r\n\r\n       setResult(result.TNO) //결과 데이터 변경 \r\n       setTodo({...initState})\r\n       \r\n    }).catch(e => {\r\n       console.error(e)\r\n    })\r\n  }\r\n\r\n  const closeModal = () => {\r\n\r\n    setResult(null)\r\n\r\n  }\r\n \r\n  return ( \r\n    <div className = \"border-2 border-sky-200 mt-10 m-2 p-4\"> \r\n\r\n     {/* 모달 처리 */}\r\n\r\n      {result ? <ResultModal title={'Add Result'} content={\\`New \\${result} Added\\`} callbackFn={closeModal}/>: <></>}\r\n\r\n\r\n      <div className=\"flex justify-center\">\r\n        …생략 \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default AddComponent;\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.5.3 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { useState } from \"react\";\r\nimport { postAdd } from \"../../api/todoApi\";\r\nimport ResultModal from \"../common/ResultModal\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\n\r\n…생략\r\n\r\nconst AddComponent = () => {\r\n\r\n  const [todo, setTodo] = useState({...initState})\r\n\r\n  const [result, setResult] = useState(null)\r\n\r\n  const {moveToList} = useCustomMove() //useCustomMove 활용 \r\n…생략\r\n\r\n  const closeModal = () => {\r\n\r\n    setResult(null)\r\n    moveToList()  //moveToList( )호출 \r\n  }\r\n \r\n  return ( \r\n    <div className = \"border-2 border-sky-200 mt-10 m-2 p-4\"> \r\n\r\n      {result ? <ResultModal title={'Add Result'} content={\\`New \\${result} Added\\`} callbackFn={closeModal}/>: <></>}\r\n\r\n      …생략 \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default AddComponent;\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.7.1 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nexport const deleteOne = async (tno) => {\r\n\r\n  const res = await axios.delete(\\`\\${prefix}/\\${tno}\\` )\r\n\r\n  return res.data\r\n\r\n}\r\n\r\nexport const putOne = async (todo) => {\r\n\r\n  const res = await axios.put(\\`\\${prefix}/\\${todo.tno}\\`, todo)\r\n\r\n  return res.data\r\n}\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.7.2</div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst initState = {\r\n  tno:0,\r\n  title:'',\r\n  writer: '',\r\n  dueDate: null,\r\n  complete: false\r\n}\r\n\r\nconst ModifyComponent = ({tno}) => {\r\n\r\n  const [todo, setTodo] = useState({...initState})\r\n\r\n  useEffect(() => {\r\n\r\n  },[tno])\r\n\r\n  return ( \r\n    <div className = \"border-2 border-sky-200 mt-10 m-2 p-4\"> \r\n      <div className=\"flex justify-end p-4\">\r\n        <button type=\"button\" \r\n          className=\"inline-block rounded p-4 m-2 text-xl w-32  text-white bg-red-500\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <button type=\"button\" \r\n          className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n        >\r\n          Modify\r\n        </button>  \r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default ModifyComponent;\r\n\r\n\r\n--------------------------------------------------------------------------------------\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport ModifyComponent from \"../../components/todo/ModifyComponent\";\r\n\r\nconst ModifyPage = () => {\r\n\r\n  const {tno} = useParams()\r\n\r\n  return ( \r\n  <div className=\"p-4 w-full bg-white\">\r\n    <div className=\"text-3xl font-extrabold\">\r\n      Todo Modify Page  \r\n    </div> \r\n\r\n    <ModifyComponent tno={tno}/>\r\n\r\n  </div>\r\n   );\r\n}\r\n \r\nexport default ModifyPage;\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >2.5 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { getOne } from \"../../api/todoApi\";\r\n\r\nconst initState = {\r\n  tno:0,\r\n  title:'',\r\n  writer: '',\r\n  dueDate: '',\r\n  complete: false\r\n}\r\n\r\nconst ModifyComponent = ({tno, moveList, moveRead}) => {\r\n\r\n  const [todo, setTodo] = useState({...initState})\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    getOne(tno).then(data =>  setTodo(data))\r\n\r\n  },[tno])\r\n\r\n  const handleChangeTodo = (e) => {\r\n\r\n    todo[e.target.name] = e.target.value\r\n\r\n    setTodo({...todo})\r\n  }\r\n\r\n  const handleChangeTodoComplete = (e) => {\r\n\r\n    const value = e.target.value\r\n\r\n    todo.complete = (value === 'Y')\r\n\r\n    setTodo({...todo})\r\n  }\r\n\r\n  return ( \r\n    <div className = \"border-2 border-sky-200 mt-10 m-2 p-4\"> \r\n\r\n      <div className=\"flex justify-center mt-10\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">TNO</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md bg-gray-100\">\r\n            {todo.tno}        \r\n          </div>  \r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">WRITER</div>\r\n          <div className=\"w-4/5 p-6 rounded-r border border-solid shadow-md bg-gray-100\">\r\n            {todo.writer}        \r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">TITLE</div>\r\n          <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md\" \r\n           name=\"title\"\r\n           type={'text'} \r\n           value={todo.title}\r\n           onChange={handleChangeTodo}\r\n           >\r\n           </input>\r\n        </div>  \r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">DUEDATE</div>\r\n          <input className=\"w-4/5 p-6 rounded-r border border-solid border-neutral-300 shadow-md\" \r\n           name=\"dueDate\"\r\n           type={'date'} \r\n           value={todo.dueDate}\r\n           onChange={handleChangeTodo}\r\n           >\r\n           </input>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <div className=\"relative mb-4 flex w-full flex-wrap items-stretch\">\r\n          <div className=\"w-1/5 p-6 text-right font-bold\">COMPLETE</div>\r\n          <select\r\n            name=\"status\" \r\n            className=\"border-solid border-2 rounded m-1 p-2\"\r\n            onChange={handleChangeTodoComplete} \r\n            value = {todo.complete? 'Y':'N'} >\r\n            <option value='Y'>Completed</option>\r\n            <option value='N'>Not Yet</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end p-4\">\r\n        <button type=\"button\" \r\n          className=\"inline-block rounded p-4 m-2 text-xl w-32 text-white bg-red-500\"\r\n        >\r\n          Delete\r\n        </button>\r\n        <button type=\"button\" \r\n          className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n        >\r\n          Modify\r\n        </button>  \r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default ModifyComponent;\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n        <li>\r\n          <div className=\"p-3 font-extrabold bg-green-500 m-3\" >4.7.4 </div>\r\n          <div className=\"border-2 m-2\">\r\n            <pre>\r\n            {`\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { deleteOne, getOne, putOne } from \"../../api/todoApi\";\r\n\r\nconst initState = {\r\n  …생략\r\n}\r\n\r\nconst ModifyComponent = ({tno}) => {\r\n\r\n  const [todo, setTodo] = useState({...initState})\r\n\r\n  //모달 창을 위한 상태 \r\n  const [result, setResult] = useState(null)\r\n\r\n  useEffect(() => {\r\n\r\n    getOne(tno).then( data => {\r\n      setTodo(data)\r\n    })\r\n\r\n  },[tno])\r\n\r\n  const handleClickModify = () => { //버튼 클릭시 \r\n\r\n    putOne(todo).then(data => {\r\n      console.log(\"modify result: \" + data)\r\n    })\r\n  }\r\n\r\n  const handleClickDelete = () => { //버튼 클릭시 \r\n\r\n    deleteOne(tno).then( data => {\r\n      console.log(\"delete result: \" + data)\r\n    })\r\n\r\n  }\r\n\r\n  const handleChangeTodo = (e) => {…}\r\n\r\n  const handleChangeTodoComplete = (e) => {…}\r\n\r\n  return ( \r\n    <div className = \"border-2 border-sky-200 mt-10 m-2 p-4\">\r\n\r\n<div className=\"flex justify-center mt-10\">\r\n        …생략 \r\n\r\n      <div className=\"flex justify-end p-4\">\r\n        <button type=\"button\" \r\n          className=\"inline-block rounded p-4 m-2 text-xl w-32  text-white bg-red-500\"\r\n          onClick={handleClickDelete}\r\n        >\r\n          Delete\r\n        </button>\r\n        <button type=\"button\" \r\n          className=\"rounded p-4 m-2 text-xl w-32 text-white bg-blue-500\"\r\n          onClick={handleClickModify}\r\n        >\r\n          Modify\r\n        </button>  \r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default ModifyComponent;\r\n\r\n\r\n-------------------------------------------------------------------\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { deleteOne, getOne, putOne } from \"../../api/todoApi\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\n\r\nimport ResultModal from \"../common/ResultModal\";\r\n\r\nconst initState = {\r\n  …생략 \r\n}\r\n\r\nconst ModifyComponent = ({tno}) => {\r\n\r\n  const [todo, setTodo] = useState({...initState})\r\n\r\n  //모달 창을 위한 상태 \r\n  const [result, setResult] = useState(null)\r\n\r\n  //이동을 위한 기능들 \r\n  const {moveToList, moveToRead} = useCustomMove()\r\n\r\n  useEffect(() => { …  },[tno])\r\n\r\n  const handleClickModify = ( ) => {\r\n\r\n    putOne(todo).then(data => {\r\n      //console.log(\"modify result: \" + data)\r\n      setResult('Modified')\r\n    })\r\n  }\r\n\r\n  const handleClickDelete = ( ) => {\r\n\r\n    deleteOne(tno).then( data => {\r\n      //console.log(\"delete result: \" + data)\r\n      setResult('Deleted')\r\n    })\r\n\r\n  }\r\n\r\n  //모달 창이 close될때 \r\n  const closeModal = () => {\r\n    if(result ==='Deleted') {\r\n      moveToList()\r\n    }else {\r\n      moveToRead(tno)\r\n    }\r\n  }\r\n\r\n  …생략 \r\n\r\n  return ( \r\n    <div className = \"border-2 border-sky-200 mt-10 m-2 p-4\">\r\n\r\n      {result ? <ResultModal title={'처리결과'} content={result} callbackFn={closeModal}></ResultModal>  :<></>}\r\n\r\n      …생략 \r\n   );\r\n}\r\n \r\nexport default ModifyComponent;\r\n\r\n\r\n            `}\r\n            </pre>\r\n          </div>\r\n        </li>\r\n\r\n\r\n\r\n      </ul>\r\n    </div>  \r\n   );\r\n}\r\n \r\nexport default Ch04;"],"names":["_jsx","className","children","_jsxs"],"sourceRoot":""}